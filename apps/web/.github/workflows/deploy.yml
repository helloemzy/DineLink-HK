name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Run TypeScript check
        run: |
          cd apps/web  
          npm run type-check
          
      - name: Run linting
        run: |
          cd apps/web
          npm run lint
          
      - name: Run tests (if available)
        run: |
          cd apps/web
          if npm run | grep -q "test"; then
            npm run test
          else
            echo "No tests configured, skipping..."
          fi

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: |
          cd apps/web
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Build Project Artifacts
        run: |
          cd apps/web
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Deploy Project Artifacts to Vercel
        run: |
          cd apps/web
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: |
          cd apps/web
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Build Project Artifacts
        run: |
          cd apps/web
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          
      - name: Deploy Project Artifacts to Vercel
        run: |
          cd apps/web
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}